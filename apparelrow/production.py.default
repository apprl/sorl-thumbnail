# -*- coding: utf-8 -*-
# Django settings for production server 

import os.path
import logging
import logging.config

from settings_common import *

DATABASE_ENGINE = 'mysql'
DATABASE_NAME = 'apparelrow_demo_03'
DATABASE_USER = 'apparelrow_demo'
DATABASE_PASSWORD = 'ashwe3'
DATABASE_HOST = ''             # Set to empty string for localhost. Not used with sqlite3.
DATABASE_PORT = ''             # Set to empty string for default. Not used with sqlite3.

APPAREL_DECOMPRESS_UTILS = {
    'gzip': '/bin/gunzip',
    'zip':  '/bin/zip',
}

MIDDLEWARE_CLASSES += ('beta.middleware.BetaMiddleware',)

#FACEBOOK_API_KEY = '177090790853'
#FACEBOOK_SECRET_KEY = '1701399a0a6126f84d08d7e702285c56'

CACHE_BACKEND = 'memcached://127.0.0.1:11211/'
CACHE_MIDDLEWARE_KEY_PREFIX = 'ar-demo'
CACHE_MIDDLEWARE_SECONDS = 120

HAYSTACK_SITECONF = 'apparelrow.search'
HAYSTACK_SEARCH_ENGINE = 'solr'
HAYSTACK_SOLR_URL = 'http://127.0.0.1:8983/solr'

BROKER_HOST = 'localhost'
BROKER_PORT = 5672
BROKER_USER = 'apparel'
BROKER_PASSWORD = 'apparel_mq'
BROKER_VHOST = 'apparel'

CELERYBEAT_SCHEDULER = "djcelery.schedulers.DatabaseScheduler"
CELERY_RESULT_BACKEND = "amqp"
CELERY_AMQP_TASK_RESULT_EXPIRES = 30

import djcelery
djcelery.setup_loader()

# Synonyms for Solr.
SEARCH_SYNONYM_FILE = os.path.join(PROJECT_ROOT, '..', '..', '..', 'solr', 'solr', 'conf', 'synonyms.txt')

LOGGING_CONFIG = os.path.join(PROJECT_ROOT, '..', '..', '..', 'etc', 'logging.conf') # logging configuration file

# --- Application wide init code goes here. 
# It would be nice to move this somewhere, but I'm not sure where to put it
# to ensure it is executed only *once* and after all settings has been evaluated


if not hasattr(logging, 'initialised'):
    logging.config.fileConfig(LOGGING_CONFIG)
    
    if DEBUG:
        logger = logging.getLogger()
        logger.setLevel(logging.DEBUG)
        logging.debug('Using debug logger')
    
    logging.info('Initialised application logger')
    setattr(logging, 'initialised', True)
