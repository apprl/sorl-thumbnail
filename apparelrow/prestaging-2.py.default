# -*- coding: utf-8 -*-

import os.path
import logging
import logging.config

from settings_common import *
DEBUG = True
EMAIL_DEBUG = True

#SERVER_APP_ROOT = os.path.join(PROJECT_ROOT, '..')

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': '{{ db_name }}',
        'USER': '{{ db_user }}',
        'PASSWORD': '{{ db_pass }}',
        'HOST': '{{ db_url }}',
        'PORT': '5432'
    }
}
CONN_MAX_AGE = 600

# Storage
STATIC_URL = 'http://{{ s3_url }}/'
AWS_STORAGE_BUCKET_NAME = AWS_BUCKET_NAME = AWS_S3_CUSTOM_DOMAIN = '{{ s3_url }}'
AWS_ACCESS_KEY_ID = '{{ aws_key_id }}'
AWS_SECRET_ACCESS_KEY = '{{ aws_key }}'

APPAREL_DECOMPRESS_UTILS = {
    'gzip': '/bin/gunzip',
    'zip':  '/bin/zip',
}

CACHE_MIDDLEWARE_KEY_PREFIX = 'ar'
CACHE_MIDDLEWARE_SECONDS = 120

SOLR_URL = 'http://{{ solr_url }}:8983/solr'
SOLR_CURRENCY_LOCAL = False
SOLR_SSH_STRING = 'deploy@{{ solr_url }}'
SOLR_CURRENCY_FILE = os.path.join('/home', 'deploy', 'solr', 'solr', 'example', 'solr', 'collection1', 'conf', 'currency.xml')


THEIMP_REDIS_HOST = '{{ redis_url }}'
THEIMP_REDIS_PORT = 6380

BROKER_URL = "redis://{{ redis_url }}:6380/0"
CELERY_RESULT_BACKEND = "redis"
CELERY_REDIS_HOST = "{{ redis_url }}"
CELERY_REDIS_PORT = 6380
CELERY_REDIS_DB = 0
CELERYBEAT_SCHEDULER = "djcelery.schedulers.DatabaseScheduler"
CELERY_ALWAYS_EAGER=True
CELERY_TIMEZONE = 'Europe/Stockholm'

import djcelery
djcelery.setup_loader()

# --- Application wide init code goes here. 
# It would be nice to move this somewhere, but I'm not sure where to put it
# to ensure it is executed only *once* and after all settings has been evaluated

RAVEN_CONFIG = {
    'dsn': '{{ sentry_url }}',
}

SENTRY_DSN='{{ sentry_url }}'

# Locale paths
LOCALE_PATHS = (
    os.path.join(SERVER_APP_ROOT,'locale'),
)

# CACHE CONFIGURATION AWS
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '{{ memcached_url }}:11211',
        'TIMEOUT': 60 * 60 * 12,
        'KEY_PREFIX': 'PRESTAGE_2'
    },
    'nginx': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '{{ memcached_url }}:11211',
        'TIMEOUT': 60 * 60 * 24 * 20,
        'KEY_FUNCTION': lambda key, x, y: key,
    },
}

EMAIL_FILE_PATH = ''
if EMAIL_DEBUG:
    EMAIL_BACKEND = 'django.core.mail.backends.filebased.EmailBackend'
    EMAIL_FILE_PATH = os.path.join(SERVER_APP_ROOT,'../logs/emails')


ALLOWED_HOSTS = ['{{ hostname }}.apprl.com','{{ internal_ip }}']

GEOIP_URL = 'http://prestage-geoip.apprl.com/ip/%s'