# -*- coding: utf-8 -*-
# Django settings for development server 

import os.path
import logging
import logging.config

from settings_common import *

PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))

DEBUG = True
TEMPLATE_DEBUG = True

DATABASE_ENGINE = 'sqlite3'
DATABASE_NAME = 'dev.db'

APPAREL_DECOMPRESS_UTILS = {
    'gzip': '/bin/gunzip',
    'zip':  '/bin/zip',
}

LOGGING_CONFIG = os.path.join(PROJECT_ROOT, '..', 'etc', 'logging.conf')
APPAREL_IMPORTER_WAREHOUSE = os.path.join(PROJECT_ROOT, '..', 'warehouse')

FACEBOOK_APP_ID = '151961958184186'
FACEBOOK_API_KEY = '2c74b09ea8dae83e4b9699a72ee55db2'
FACEBOOK_SECRET_KEY = '0e53ad32bdd85a49bb972fa2f6985908'

#CACHE_BACKEND = 'memcached://127.0.0.1:11211/'
#CACHE_MIDDLEWARE_KEY_PREFIX = 'ar-demo'
#CACHE_MIDDLEWARE_SECONDS = 120

# --- Application wide init code goes here. 
# It would be nice to move this somewhere, but I'm not sure where to put it
# to ensure it is executed only *once* and after all settings has been evaluated

if not hasattr(logging, 'initialised'):
    logging.config.fileConfig(LOGGING_CONFIG)
    
    if DEBUG:
        logger = logging.getLogger()
        logger.setLevel(logging.DEBUG)
        logging.debug('Using debug logger')
    
    logging.info('Initialised application logger')
    setattr(logging, 'initialised', True)

#INTERNAL_IPS = ('127.0.0.1',)
MIDDLEWARE_CLASSES += ('debug_toolbar.middleware.DebugToolbarMiddleware',)
DEBUG_TOOLBAR_PANELS = (
    'debug_toolbar.panels.version.VersionDebugPanel',
    'debug_toolbar.panels.timer.TimerDebugPanel',
    'debug_toolbar.panels.settings_vars.SettingsVarsDebugPanel',
    'debug_toolbar.panels.headers.HeaderDebugPanel',
    'debug_toolbar.panels.request_vars.RequestVarsDebugPanel',
    'debug_toolbar.panels.template.TemplateDebugPanel',
    'debug_toolbar.panels.sql.SQLDebugPanel',
    'debug_toolbar.panels.signals.SignalDebugPanel',
    'debug_toolbar.panels.logger.LoggingPanel',
)
INSTALLED_APPS += ('debug_toolbar',)
