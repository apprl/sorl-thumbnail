server.modules += ( "mod_expire" )
#
# mod_auth
# Enables basic authentication
#

server.modules += ( "mod_auth" )
auth.debug = 2


#
# mod_rewrite
# 
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_rewrite
#

server.modules  += ( "mod_rewrite" )



#
# mod_access
# 
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_access
#

server.modules  += ( "mod_access" )


#
# mod_alias
#
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_alias
#

server.modules  += ( "mod_alias" )


# mod_fastcgi
#
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_fastcgi
# 

server.modules  += ( "mod_fastcgi" )
# fastcgi.debug  = 65535  # Uncomment for server-wide FastCGI debug



# 
# mod_accesslog
# 
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_accesslog
# 
# NOTE: Default format uses mimics Apaches CLF
# 

server.modules    += ( "mod_accesslog" )

#
# mod_cgi
# Allows CGI execution
#


server.modules      += ("mod_cgi")


#
# mod_setenv
# Modify request/response environment
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ModSetEnv
#

server.modules      += ("mod_proxy")

#
# mod_setenv
# Modify request/response environment
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ModSetEnv
#

server.modules      += ("mod_setenv")

server.modules      += ("mod_redirect")


$HTTP["host"] =~ "^.*(?:apparelrow\.se|apparelrow\.com)$" {
    var.deploy-base  = "%(path)s"
    var.deploy-dir   = var.deploy-base + "/releases/current"

    server.document-root = var.deploy-dir + "/www/root/apprltransition"

    url.rewrite-once = (
        "^/apprl\.jpg$" => "/apprl.jpg",
        "^/.*$" => "/"
    )
}

$HTTP["host"] =~ "^(%(hostname)s\.)?apprl\.com" {
    var.project-name = "%(project_name)s"
    var.deploy-base  = "%(path)s"
    var.deploy-dir   = var.deploy-base + "/releases/current"

    # Password protect everything except /robots.txt
    # The url to /robots.txt has been rewritten (see include.conf)
    $HTTP["url"] !~ "^/media/robots\.%(hostname)s\.txt$" {
        auth.backend = "htpasswd"
        auth.backend.htpasswd.userfile = var.deploy-dir + "/etc/htpasswd"
        auth.require = ( "" => (
               "method" => "basic",
               "realm"  => "Apprl Staging",
               "require" => "valid-user"
           )
        )
    }

    include "conf-available/%(project_name)s.include.conf"
}
