upstream gunicorn {
    server 127.0.0.1:%(gunicorn_port)s;
}

server {
    server_name www.apprl.com;

    return 301 $scheme://apprl.com$request_uri;
}

server {
    server_name *.apprl.se;

    return 301 $scheme://apprl.com$request_uri;
}

server {
    server_name .apparelrow.com .apparelrow.se;

    root %(path)s/releases/current/www/root/apprltransition;
    index index.html index.htm;
}

server {
    server_name apprl.com aws.apprl.com %(hostname)s.apprl.com %(internal_ip)s content.apparelrow.com;
    access_log on;

    error_page 500 502 503 504 404 /502.html;
    location = /502.html {
         root $deploy_dir/www/;
    }


    # Proxy /admin requests to home page, no admin server here!
    location ~ "^/([a-zA-Z]{2})/admin" {
    #    auth_basic_user_file $deploy_dir/etc/htpasswd_web;
    #    auth_basic "Apprl Production v2";
        return 307 $scheme://admin.apprl.com$request_uri;
    }
    include sites-available/%(project_name)s.include.conf;
}

server {
    listen 443;

    ssl on;
    ssl_certificate /etc/ssl/apprl.com.crt;
    ssl_certificate_key /etc/ssl/apprl.com.key;

    ssl_prefer_server_ciphers on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA;

    server_name apprl.com %(hostname)s.apprl.com;
    client_max_body_size 5M;

    location /a/conversion {
        proxy_pass http://gunicorn;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    include sites-available/%(project_name)s.include.conf;
#    location / {
#        rewrite ^ http://$server_name$request_uri? permanent;
#    }
}
