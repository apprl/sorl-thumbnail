server.modules += ( "mod_expire" )
#
# mod_auth
# Enables basic authentication
#

server.modules += ( "mod_auth" )
auth.debug = 2


#
# mod_rewrite
# 
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_rewrite
#

server.modules  += ( "mod_rewrite" )



#
# mod_access
# 
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_access
#

server.modules  += ( "mod_access" )


#
# mod_alias
#
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_alias
#

server.modules  += ( "mod_alias" )


# mod_fastcgi
#
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_fastcgi
# 

server.modules  += ( "mod_fastcgi" )
# fastcgi.debug  = 65535  # Uncomment for server-wide FastCGI debug



# 
# mod_accesslog
# 
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs#mod_accesslog
# 
# NOTE: Default format uses mimics Apaches CLF
# 

server.modules    += ( "mod_accesslog" )

#
# mod_cgi
# Allows CGI execution
#


server.modules      += ("mod_cgi")


#
# mod_setenv
# Modify request/response environment
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ModSetEnv
#

server.modules      += ("mod_proxy")

#
# mod_setenv
# Modify request/response environment
# http://redmine.lighttpd.net/projects/lighttpd/wiki/Docs:ModSetEnv
#

server.modules      += ("mod_setenv")

server.modules      += ("mod_redirect")


$HTTP["host"] =~ "^.*apparelrow\.se$" {
    url.redirect = ( "^/(.*)" => "http://apparelrow.com/$1" )
}

$HTTP["host"] =~ "^(demo|www)\.(apparelrow\.com)$" {
    url.redirect = ( "^/(.*)" => "http://%%2/$1" )
}

$HTTP["host"] =~ "^(%(hostname)s\.)?apparelrow\.com" {
    var.project-name = "apparelrow"
    var.deploy-base  = "%(path)s"
    var.deploy-dir   = var.deploy-base + "/releases/current"

    server.document-root = var.deploy-dir + "/" + var.project-name
    
    fastcgi.server = (
        "/apparelrow.fcgi" => (
            "main" => (
                "socket"      => var.deploy-base + "/var/" + var.project-name + ".sock",
                "check-local" => "disable",
            )
        ),
        "/apparelrow-admin.fcgi" => (
            "main" => (
                "socket"      => var.deploy-base + "/var/" + var.project-name + ".sock-admin",
                "check-local" => "disable",
            )
        ),
    )
    
    alias.url = (
        "/media"           => var.deploy-dir + "/apparelrow/media",
        "/admin_media"     => var.deploy-base + "/lib/python2.6/site-packages/django/contrib/admin/media",
        "/screenshots"     => var.deploy-dir + "/www/root/screenshots",
    )

    expire.url = (
        "/media"           => "access plus 1 years",
        "/admin_media"     => "access plus 1 years",
        "/screenshots"     => "access plus 1 years",
    )

    auth.backend = "htpasswd"
    auth.backend.htpasswd.userfile = var.deploy-dir + "/www/etc/htpasswd"
    auth.debug = 2
    auth.require = ( "/screenshots" => (
           "method" => "basic",
           "realm"  => "ApparelRow Preview",
           "require" => "valid-user"
       )
    )

    url.rewrite-once = (
        "^/robots\.txt$"           => "/media/robots.txt",           # Robots.txt
        "^/favicon\.ico$"          => "/media/favicon.ico",          # Favicon, redirect to static folder
        "^(/(?:admin_)?media.*)$"  => "$1",                          # Static files
        "^/(screenshots/.*)$"      => "$1",                          # Screenshots
        "^(/admin(?:\/.*|$))"      => "/apparelrow-admin.fcgi$1",    # FCGI Admin site configuration
        "^(/.*)$"                  => "/apparelrow.fcgi$1",          # FCGI configuration
    )
}
